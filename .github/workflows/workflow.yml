'name': 'release'

'env':
    'GO_VERSION': '1.23.2'

'on':
    'push':
        'branches':
          - '*'
        'tags':
          - 'v*'
    'pull_request':

'jobs':
    'test':
        'runs-on': 'ubuntu-latest'
        'env':
            'GO111MODULE': 'on'
            'GOPROXY': 'https://goproxy.cn'
        'steps':
          - 'name': 'Checkout'
            'uses': 'actions/checkout@v2'
            'with':
                'fetch-depth': 0
          - 'name': 'Set up Go'
            'uses': 'actions/setup-go@v3'
            'with':
                'go-version': '${{ env.GO_VERSION }}'
          - 'name': 'Set up Go'
            'uses': 'actions/setup-go@v3'
            'with':
                'go-version': '${{ env.GO_VERSION }}'
          - 'name': 'Set up Go modules cache'
            'uses': 'actions/cache@v2'
            'with':
                'path': '~/go/pkg/mod'
                'key': "${{ runner.os }}-go-${{ hashFiles('go.sum') }}"
                'restore-keys': '${{ runner.os }}-go-'
          - 'name': 'Run make ci'
            'shell': 'bash'
            'run': 'make VERBOSE=1 ci'
          - 'name': 'Upload coverage'
            'uses': 'codecov/codecov-action@v1'
            'if': "success()"
            'with':
                'token': '${{ secrets.CODECOV_TOKEN }}'
                'file': './coverage.txt'

    'notify':
        'needs':
          - 'test'
        # Secrets are not passed to workflows that are triggered by a pull request
        # from a fork.
        #
        # Use always() to signal to the runner that this job must run even if the
        # previous ones failed.
        'if':
            ${{
                always() &&
                github.repository_owner == 'AdguardTeam' &&
                (
                    github.event_name == 'push' ||
                    github.event.pull_request.head.repo.full_name == github.repository
                )
            }}
        'runs-on': 'ubuntu-latest'
        'steps':
          - 'name': 'Conclusion'
            'uses': 'technote-space/workflow-conclusion-action@v1'
          - 'name': 'Send Slack notif'
            'uses': '8398a7/action-slack@v3'
            'with':
                'status': '${{ env.WORKFLOW_CONCLUSION }}'
                'fields': 'repo, message, commit, author, workflow'
            'env':
                'GITHUB_TOKEN': '${{ secrets.GITHUB_TOKEN }}'
                'SLACK_WEBHOOK_URL': '${{ secrets.SLACK_WEBHOOK_URL }}'
